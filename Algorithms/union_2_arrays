# brute force method 
def Unionarray(arr1, arr2, n, m):
    set1 = set(arr1) #O(n)
    set2 = set(arr2)#O(m)
    
    result = list(set1.union(set2)) # union -> O(n log n), list -> O(n)
    #  so in this case the time complexity is O(nlogn+mlogm)
    # SC-> O(m+n)
    return result

if __name__ == "__main__":
    arr1 = [1, 2, 2, 2, 3]
    arr2 = [2, 3, 3, 4, 5, 5]
    n = len(arr1)
    m = len(arr2)
   
    # Function call
    uni = Unionarray(arr1, arr2, n, m)
    for i in uni:
        print(i, end=" ")
    

# optimal solution 
# Union of Two-Sorted Arrays using Two-Pointers
"""To find union of two sorted arrays using two pointers, follow the following procedure : 

Use two index variables i and j, initial values i = 0, j = 0 
If arr1[i] is smaller than arr2[j] then print arr1[i] and increment i. 
If arr1[i] is greater than arr2[j] then print arr2[j] and increment j. 
If both are same then print any of them and increment both i and j. 
Print remaining elements of the larger array.
Below is the implementation of the above approach :"""
def printUnion(arr1, arr2, m, n):
    i =0 
    j = 0
    while i<m and  j<n:
        if arr1[i] < arr2[j]:
            print(arr1[i], end=" ")
            i+=1
        elif arr2[j]<arr1[i]:
            print(arr2[i], end=" ")
            j+=1
        else: # jab same hon tabh
            print(arr2[j],end=" ")
            i+=1
            j+=1
    while i < m:
        print(arr1[i],end=" ")
        i += 1
 
    while j < n:
        print(arr2[j],end=" ")
        j += 1

arr1 = [1, 2, 4, 5, 6]
arr2 = [2, 3, 5, 7]
m = len(arr1)
n = len(arr2)
printUnion(arr1, arr2, m, n)
    
"""    
Time Complexity : O(m + n)
Auxiliary Space: O(1)"""

#  handling the duplicates
def next_distinct(arr, x):
    if x<len(arr)-1 and arr[x]==arr[x+1]:
        x+=1
    return x+1
def printUnion(arr1, arr2):
    m = len(arr1)
    n = len(arr2)
    i =0
    j =0
    while i<m and  j<n:
        if arr1[i] < arr2[j]:
            print(arr1[i], end=" ")
            i = next_distinct(arr1, i)
        elif arr2[j]<arr1[i]:
            print(arr2[i], end=" ")
            j = next_distinct(arr2,j)
        else: # jab same hon tabh
            print(arr2[j],end=" ")
            i = next_distinct(arr1, i)
            j = next_distinct(arr2,j)
    while i < m:
        print(arr1[i],end=" ")
        i = next_distinct(arr1, i)
 
    while j < n:
        print(arr2[j],end=" ")
        j = next_distinct(arr2,j)
arr1 = [1, 2, 2, 2, 3]
arr2 = [2, 3, 3, 4, 5, 5]
printUnion(arr1, arr2)